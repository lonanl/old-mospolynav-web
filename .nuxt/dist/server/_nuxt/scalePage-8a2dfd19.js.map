{"version":3,"file":"scalePage-8a2dfd19.js","sources":["../../../../pages/scalePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"layout\">\r\n      <div class=\"layout__map\">\r\n        <div class=\"card\">\r\n          <Scale :map=\"map\" :view-box=\"viewBox\" :thin-border-on-zoom=\"true\" :wrapper-styles=\"{\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n          }\" :mobilePreventScroll=\"true\" @click=\"click\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"layout__content\">\r\n        <h4 class=\"small-title\">\r\n          Actions\r\n        </h4>\r\n        <ul>\r\n          <li>Click to select region</li>\r\n          <li>Scroll mousewheel for zoom</li>\r\n          <li>Hold left mouse button to drag map</li>\r\n        </ul>\r\n        <template v-if=\"selectedRegions && selectedRegions.length\">\r\n          <h4 class=\"small-title\">\r\n            Выбранные аудитории\r\n          </h4>\r\n          <div class=\"label\" v-for=\"(region, index) in selectedRegions\" :key=\"index\">\r\n            {{ region.title }}\r\n          </div>\r\n        </template>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport regions from '@/assets/dictionaries/map.js'\r\nexport default {\r\n  data() {\r\n    return {\r\n      regions,\r\n      viewBox: '0 0 1334 1404',\r\n      selectedIds: [],\r\n      selectedAudId: null,\r\n      defaultColor: '#494949',\r\n      secondColor: '#9C9C9F',\r\n      successColor: '#5F6DEC'\r\n    }\r\n  },\r\n  computed: {\r\n    map() {\r\n      let map = this.regions;\r\n\r\n      map.forEach(region => {\r\n        if (this.selectedIds.indexOf(region.id) !== -1) {\r\n          region.fill = this.successColor;\r\n        } else {\r\n          region.fill = this.defaultColor;\r\n        }\r\n      });\r\n      return map;\r\n    },\r\n    selectedRegions() {\r\n      return this.map.filter(region => this.selectedIds.indexOf(region.id) !== -1);\r\n    }\r\n  },\r\n  methods: {\r\n    findRegionById(id) {\r\n      return this.map.find(x => x.id === id)\r\n    },\r\n    click(payload) {\r\n      if (this.selectedIds.indexOf(payload.id) === -1) {\r\n        if (payload.id !== undefined) {\r\n          console.log(4312);\r\n\r\n          if (this.selectedAudId !== null) {\r\n            this.selectedIds.splice(this.selectedIds.indexOf(this.selectedAudId), 1)\r\n          }\r\n\r\n          this.selectedAudId = payload.id\r\n\r\n          this.selectedIds.push(payload.id)\r\n\r\n          console.log(this.selectedIds);\r\n        }\r\n      } else {\r\n        this.selectedAudId = null\r\n        this.selectedIds.splice(this.selectedIds.indexOf(payload.id), 1)\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@use \"../assets/scss/abstract/variables\";\r\n@use \"../assets/scss/abstract/mixins\" as *;\r\n\r\n.container {\r\n  width: 100vw;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n}\r\n\r\n.map {\r\n  position: relative;\r\n  text-align: center;\r\n  //width: 100%;\r\n  //height: 100%;\r\n  //overflow-x: hidden;\r\n  //overflow-y: hidden;\r\n  transition: transform 0.5s linear;\r\n\r\n  &__svg {\r\n    position: absolute;\r\n    top: -4px;\r\n    left: 180px;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n\r\n  &__img {\r\n    width: 903px;\r\n    height: 794px;\r\n  }\r\n}\r\n\r\n.auditory {\r\n  fill-opacity: 0%;\r\n  //fill: #494949;\r\n  stroke-opacity: 0;\r\n  //stroke: #9a9a9c;\r\n  stroke-width: 4px;\r\n\r\n  &:hover,\r\n  &:active {\r\n    transition: fill-opacity 0.2s ease;\r\n    transition: stroke-opacity 0.2s ease;\r\n    fill: variables.$blue;\r\n    stroke: variables.$blue;\r\n    fill-opacity: 0.5;\r\n    stroke-opacity: 1;\r\n    cursor: pointer;\r\n  }\r\n}\r\n\r\n.small-title,\r\n.label {\r\n  color: variables.$white;\r\n}\r\n</style>"],"names":["_ssrRenderAttrs","_mergeProps","_ssrInterpolate"],"mappings":";;;;;;;;;;;;;;;;AAsCA,MAAA,YAAA;AAAA,EACE,OAAA;AACE,WAAA;AAAA,MACE;AAAA,MACA,SAAA;AAAA,MACA,aAAA,CAAA;AAAA,MACA,eAAA;AAAA;MAEA,aAAA;AAAA,MACA,cAAA;AAAA,IACF;AAAA;EAEF,UAAA;AAAA;AAEI,UAAA,MAAA,KAAA;AAEA,UAAA,QAAA,YAAA;AACE,YAAA,KAAA,YAAA,QAAA,OAAA,EAAA,MAAA,IAAA;;;;QAIA;AAAA,MACF,CAAA;AACA,aAAA;AAAA;IAEF,kBAAA;AACE,aAAA,KAAA,IAAA,OAAA,YAAA,KAAA,YAAA,QAAA,OAAA,EAAA,MAAA,EAAA;AAAA,IACF;AAAA;EAEF,SAAA;AAAA,IACE,eAAA,IAAA;AACE,aAAA,KAAA,IAAA,KAAA,OAAA,EAAA,OAAA,EAAA;AAAA;IAEF,MAAA,SAAA;AACE,UAAA,KAAA,YAAA,QAAA,QAAA,EAAA,MAAA,IAAA;;AAEI,kBAAA,IAAA,IAAA;;AAGE,iBAAA,YAAA,OAAA,KAAA,YAAA,QAAA,KAAA,aAAA,GAAA,CAAA;AAAA,UACF;;AAIA,eAAA,YAAA,KAAA,QAAA,EAAA;;QAGF;AAAA;;AAGA,aAAA,YAAA,OAAA,KAAA,YAAA,QAAA,QAAA,EAAA,GAAA,CAAA;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;;;AA3FO,QAAA,OAAAA,eAAAC,WAAA,EAAA,OAAA,eAAA,MAAA,CAAA,mIAAA;;IAIW,KAAA,SAAA;AAAA,IAAW,YAAA,MAAA;AAAA,IAAoB,uBAAA;AAAA,IAA4B,kBAAA;AAAA;;;;;IAMlE;AAAA,IAAG,qBAAA;AAAA,IAA4B,SAAA,SAAA;AAAA;;;;;AAiB3B,YAAA,sCAAAC,eAAA,OAAA,KAAA,SAAA;AAAA;;;;;;;;;;;;;;"}